# params.yaml

# This list is used by DVC to loop through data splits.
data_splits:
  - train
  - validation
  - test

# =================================================================
# --- HYPERPARAMETERS FOR GOLD PIPELINE STAGES ---
# =================================================================
gold_pipeline:
  # --- Imputation (Stage 3) ---
  imputation:
    median: ["price", "time", "distance"]
    mode: ["agency", "flight_type"]
    constant:
      from_location: "Unknown"
      to_location: "Unknown"

  # --- Rare Category Grouping (Stage 5) ---
  rare_category_grouping:
    # Threshold for grouping. Categories appearing in less than this fraction
    # of the data will be grouped into a single 'Other' category.
    cardinality_threshold: 0.01

  # --- Outlier Handling (Stage 7) ---
  outlier_handling:
    # Strategy can be 'iqr', 'zscore' 'isolation_forest'.
    detection_strategy: "iqr"
    # Handling can be 'trim', 'winsorize'.
    handling_strategy: "trim"
    # The expected percentage of outliers in the data for Isolation Forest.
    iso_forest_contamination: 0.01

  # --- Power Transformations (Stage 8) ---
  power_transformer:
    # Strategy can be 'log', 'yeo-johnson' or 'box-cox'.
    strategy: "yeo-johnson"

  # --- Scaling (Stage 9) ---
  scaler:
    # Strategy can be 'standard', 'robust', or 'minmax'
    strategy: "standard"

training_pipeline:
  model_to_train: "LinearRegression"
  name: "LinearRegression_v1"
  # Specify a list of columns to drop to handle multicollinearity.
  # e.g., ["distance"] or ["time"]. Set to null or [] to keep all columns.
  drop_multicollinear_cols: ["distance"]
  training_params:
    n_jobs: -1

mlflow_params:
  experiment_name: "Flights_Price_Prediction"
  # experiment_id:
  run_name: "test3-removed-multicollinearity"
