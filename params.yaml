# params.yaml

# This list is used by DVC to loop through data splits.
data_splits:
  - train
  - validation
  - test

# =================================================================
# --- HYPERPARAMETERS FOR GOLD PIPELINE STAGES ---
# =================================================================
gold_pipeline:
  imputation:
    median: ["price", "time", "distance"]
    mode: ["agency", "flight_type"]
    constant:
      from_location: "Unknown"
      to_location: "Unknown"
  rare_category_grouping:
    cardinality_threshold: 0.01
  outlier_handling:
    detection_strategy: "iqr"
    handling_strategy: "trim"
  power_transformer:
    strategy: "yeo-johnson"
  scaler:
    strategy: "standard"

# =================================================================
# --- PARAMETERS FOR MODEL TRAINING ---
# =================================================================
training_pipeline:
  # -----------------------------------------------------------------
  # >> The ONLY line you need to change to run a different model <<
  # This key points to one of the configurations in the 'models' dictionary below.
  model_config_to_run: "LinearRegression_Simple_Base"
  # -----------------------------------------------------------------

  # --- Dictionary of all available model configurations ---
  models:
    # -----------------------------------------------------------------
    # 1. Linear Regression (Baseline)
    # -----------------------------------------------------------------
    LinearRegression_Simple_Base:
      model_class: "LinearRegression"
      name: "LinearRegression_Simple_Base"
      run_name: "LinearRegression_Simple_Base"
      log_model_artifact: false
      log_predictions: true
      drop_multicollinear_cols: ["time"]
      training_params:
        n_jobs: -1
        fit_intercept: true
      cross_validation:
        enabled: false

    LinearRegression_CV_Base:
      model_class: "LinearRegression"
      name: "LinearRegression_CV_Base"
      run_name: "LinearRegression_CV_Base"
      log_model_artifact: false
      log_predictions: true
      drop_multicollinear_cols: ["time"]
      training_params:
        n_jobs: -1
        fit_intercept: true
      cross_validation:
        enabled: true
        n_splits: 5

    # -----------------------------------------------------------------
    # 2. Ridge Regression (L2 Regularization)
    # -----------------------------------------------------------------
    Ridge_Simple_Base:
      model_class: "Ridge"
      name: "Ridge_Simple_Base"
      run_name: "Ridge_Simple_Base"
      log_model_artifact: true
      log_predictions: true
      drop_multicollinear_cols: ["time"]
      training_params: {}
      cross_validation:
        enabled: false

    Ridge_CV_Base:
      model_class: "Ridge"
      name: "Ridge_CV_Base"
      run_name: "Ridge_CV_Base"
      log_model_artifact: true
      log_predictions: true
      drop_multicollinear_cols: ["time"]
      training_params: {}
      cross_validation:
        enabled: true
        n_splits: 5

    # -----------------------------------------------------------------
    # 3. Lasso Regression (L1 Regularization)
    # -----------------------------------------------------------------
    Lasso_Simple_Base:
      model_class: "Lasso"
      name: "Lasso_Simple_Base"
      run_name: "Lasso_Simple_Base"
      log_model_artifact: true
      log_predictions: true
      drop_multicollinear_cols: ["time"]
      training_params: {}
      cross_validation:
        enabled: false

    Lasso_CV_Base:
      model_class: "Lasso"
      name: "Lasso_CV_Base"
      run_name: "Lasso_CV_Base"
      log_model_artifact: true
      log_predictions: true
      drop_multicollinear_cols: ["time"]
      training_params: {}
      cross_validation:
        enabled: true
        n_splits: 5

    # -----------------------------------------------------------------
    # 4. ElasticNet (L1 + L2 Regularization)
    # -----------------------------------------------------------------
    ElasticNet_Simple_Base:
      model_class: "ElasticNet"
      name: "ElasticNet_Simple_Base"
      run_name: "ElasticNet_Simple_Base"
      log_model_artifact: true
      log_predictions: true
      drop_multicollinear_cols: ["time"]
      training_params: {}
      cross_validation:
        enabled: false

    ElasticNet_CV_Base:
      model_class: "ElasticNet"
      name: "ElasticNet_CV_Base"
      run_name: "ElasticNet_CV_Base"
      log_model_artifact: true
      log_predictions: true
      drop_multicollinear_cols: ["time"]
      training_params: {}
      cross_validation:
        enabled: true
        n_splits: 5

    # -----------------------------------------------------------------
    # 5. XGBoost Regressor
    # -----------------------------------------------------------------
    XGBRegressor_Simple_Base:
      model_class: "XGBRegressor"
      name: "XGBRegressor_Simple_Base"
      run_name: "XGBRegressor_Simple_Base"
      log_model_artifact: true
      log_predictions: true
      drop_multicollinear_cols: []
      training_params:
        n_jobs: -1
      cross_validation:
        enabled: false

    XGBRegressor_CV_Base:
      model_class: "XGBRegressor"
      name: "XGBRegressor_CV_Base"
      run_name: "XGBRegressor_CV_Base"
      log_model_artifact: true
      log_predictions: true
      drop_multicollinear_cols: []
      training_params:
        n_jobs: -1
      cross_validation:
        enabled: true
        n_splits: 5

    # -----------------------------------------------------------------
    # 6. LightGBM Regressor
    # -----------------------------------------------------------------
    LGBMRegressor_Simple_Base:
      model_class: "LGBMRegressor"
      name: "LGBMRegressor_Simple_Base"
      run_name: "LGBMRegressor_Simple_Base"
      log_model_artifact: true
      log_predictions: true
      drop_multicollinear_cols: []
      training_params:
        n_jobs: -1
      cross_validation:
        enabled: false

    LGBMRegressor_CV_Base:
      model_class: "LGBMRegressor"
      name: "LGBMRegressor_CV_Base"
      run_name: "LGBMRegressor_CV_Base"
      log_model_artifact: true
      log_predictions: true
      drop_multicollinear_cols: []
      training_params:
        n_jobs: -1
      cross_validation:
        enabled: true
        n_splits: 5

# =================================================================
# --- PARAMETERS FOR MLFLOW ---
# =================================================================
mlflow_params:
  experiment_name: "Flights_Price_Prediction_Linear_Models"
